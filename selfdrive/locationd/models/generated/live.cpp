#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6616903330243791477) {
   out_6616903330243791477[0] = 0;
   out_6616903330243791477[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6616903330243791477[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6616903330243791477[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6616903330243791477[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6616903330243791477[5] = -sin(in_vec[1]);
   out_6616903330243791477[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6616903330243791477[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6616903330243791477[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6616903330243791477[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6616903330243791477[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6616903330243791477[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6616903330243791477[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6616903330243791477[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6616903330243791477[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6616903330243791477[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6616903330243791477[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6616903330243791477[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7776782165476422622) {
   out_7776782165476422622[0] = delta_x[0] + nom_x[0];
   out_7776782165476422622[1] = delta_x[1] + nom_x[1];
   out_7776782165476422622[2] = delta_x[2] + nom_x[2];
   out_7776782165476422622[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7776782165476422622[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7776782165476422622[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7776782165476422622[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7776782165476422622[7] = delta_x[6] + nom_x[7];
   out_7776782165476422622[8] = delta_x[7] + nom_x[8];
   out_7776782165476422622[9] = delta_x[8] + nom_x[9];
   out_7776782165476422622[10] = delta_x[9] + nom_x[10];
   out_7776782165476422622[11] = delta_x[10] + nom_x[11];
   out_7776782165476422622[12] = delta_x[11] + nom_x[12];
   out_7776782165476422622[13] = delta_x[12] + nom_x[13];
   out_7776782165476422622[14] = delta_x[13] + nom_x[14];
   out_7776782165476422622[15] = delta_x[14] + nom_x[15];
   out_7776782165476422622[16] = delta_x[15] + nom_x[16];
   out_7776782165476422622[17] = delta_x[16] + nom_x[17];
   out_7776782165476422622[18] = delta_x[17] + nom_x[18];
   out_7776782165476422622[19] = delta_x[18] + nom_x[19];
   out_7776782165476422622[20] = delta_x[19] + nom_x[20];
   out_7776782165476422622[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1063905258470432307) {
   out_1063905258470432307[0] = -nom_x[0] + true_x[0];
   out_1063905258470432307[1] = -nom_x[1] + true_x[1];
   out_1063905258470432307[2] = -nom_x[2] + true_x[2];
   out_1063905258470432307[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1063905258470432307[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1063905258470432307[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1063905258470432307[6] = -nom_x[7] + true_x[7];
   out_1063905258470432307[7] = -nom_x[8] + true_x[8];
   out_1063905258470432307[8] = -nom_x[9] + true_x[9];
   out_1063905258470432307[9] = -nom_x[10] + true_x[10];
   out_1063905258470432307[10] = -nom_x[11] + true_x[11];
   out_1063905258470432307[11] = -nom_x[12] + true_x[12];
   out_1063905258470432307[12] = -nom_x[13] + true_x[13];
   out_1063905258470432307[13] = -nom_x[14] + true_x[14];
   out_1063905258470432307[14] = -nom_x[15] + true_x[15];
   out_1063905258470432307[15] = -nom_x[16] + true_x[16];
   out_1063905258470432307[16] = -nom_x[17] + true_x[17];
   out_1063905258470432307[17] = -nom_x[18] + true_x[18];
   out_1063905258470432307[18] = -nom_x[19] + true_x[19];
   out_1063905258470432307[19] = -nom_x[20] + true_x[20];
   out_1063905258470432307[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1018911972123403788) {
   out_1018911972123403788[0] = 1.0;
   out_1018911972123403788[1] = 0;
   out_1018911972123403788[2] = 0;
   out_1018911972123403788[3] = 0;
   out_1018911972123403788[4] = 0;
   out_1018911972123403788[5] = 0;
   out_1018911972123403788[6] = 0;
   out_1018911972123403788[7] = 0;
   out_1018911972123403788[8] = 0;
   out_1018911972123403788[9] = 0;
   out_1018911972123403788[10] = 0;
   out_1018911972123403788[11] = 0;
   out_1018911972123403788[12] = 0;
   out_1018911972123403788[13] = 0;
   out_1018911972123403788[14] = 0;
   out_1018911972123403788[15] = 0;
   out_1018911972123403788[16] = 0;
   out_1018911972123403788[17] = 0;
   out_1018911972123403788[18] = 0;
   out_1018911972123403788[19] = 0;
   out_1018911972123403788[20] = 0;
   out_1018911972123403788[21] = 0;
   out_1018911972123403788[22] = 1.0;
   out_1018911972123403788[23] = 0;
   out_1018911972123403788[24] = 0;
   out_1018911972123403788[25] = 0;
   out_1018911972123403788[26] = 0;
   out_1018911972123403788[27] = 0;
   out_1018911972123403788[28] = 0;
   out_1018911972123403788[29] = 0;
   out_1018911972123403788[30] = 0;
   out_1018911972123403788[31] = 0;
   out_1018911972123403788[32] = 0;
   out_1018911972123403788[33] = 0;
   out_1018911972123403788[34] = 0;
   out_1018911972123403788[35] = 0;
   out_1018911972123403788[36] = 0;
   out_1018911972123403788[37] = 0;
   out_1018911972123403788[38] = 0;
   out_1018911972123403788[39] = 0;
   out_1018911972123403788[40] = 0;
   out_1018911972123403788[41] = 0;
   out_1018911972123403788[42] = 0;
   out_1018911972123403788[43] = 0;
   out_1018911972123403788[44] = 1.0;
   out_1018911972123403788[45] = 0;
   out_1018911972123403788[46] = 0;
   out_1018911972123403788[47] = 0;
   out_1018911972123403788[48] = 0;
   out_1018911972123403788[49] = 0;
   out_1018911972123403788[50] = 0;
   out_1018911972123403788[51] = 0;
   out_1018911972123403788[52] = 0;
   out_1018911972123403788[53] = 0;
   out_1018911972123403788[54] = 0;
   out_1018911972123403788[55] = 0;
   out_1018911972123403788[56] = 0;
   out_1018911972123403788[57] = 0;
   out_1018911972123403788[58] = 0;
   out_1018911972123403788[59] = 0;
   out_1018911972123403788[60] = 0;
   out_1018911972123403788[61] = 0;
   out_1018911972123403788[62] = 0;
   out_1018911972123403788[63] = 0;
   out_1018911972123403788[64] = 0;
   out_1018911972123403788[65] = 0;
   out_1018911972123403788[66] = -0.5*state[4];
   out_1018911972123403788[67] = -0.5*state[5];
   out_1018911972123403788[68] = -0.5*state[6];
   out_1018911972123403788[69] = 0;
   out_1018911972123403788[70] = 0;
   out_1018911972123403788[71] = 0;
   out_1018911972123403788[72] = 0;
   out_1018911972123403788[73] = 0;
   out_1018911972123403788[74] = 0;
   out_1018911972123403788[75] = 0;
   out_1018911972123403788[76] = 0;
   out_1018911972123403788[77] = 0;
   out_1018911972123403788[78] = 0;
   out_1018911972123403788[79] = 0;
   out_1018911972123403788[80] = 0;
   out_1018911972123403788[81] = 0;
   out_1018911972123403788[82] = 0;
   out_1018911972123403788[83] = 0;
   out_1018911972123403788[84] = 0;
   out_1018911972123403788[85] = 0;
   out_1018911972123403788[86] = 0;
   out_1018911972123403788[87] = 0.5*state[3];
   out_1018911972123403788[88] = 0.5*state[6];
   out_1018911972123403788[89] = -0.5*state[5];
   out_1018911972123403788[90] = 0;
   out_1018911972123403788[91] = 0;
   out_1018911972123403788[92] = 0;
   out_1018911972123403788[93] = 0;
   out_1018911972123403788[94] = 0;
   out_1018911972123403788[95] = 0;
   out_1018911972123403788[96] = 0;
   out_1018911972123403788[97] = 0;
   out_1018911972123403788[98] = 0;
   out_1018911972123403788[99] = 0;
   out_1018911972123403788[100] = 0;
   out_1018911972123403788[101] = 0;
   out_1018911972123403788[102] = 0;
   out_1018911972123403788[103] = 0;
   out_1018911972123403788[104] = 0;
   out_1018911972123403788[105] = 0;
   out_1018911972123403788[106] = 0;
   out_1018911972123403788[107] = 0;
   out_1018911972123403788[108] = -0.5*state[6];
   out_1018911972123403788[109] = 0.5*state[3];
   out_1018911972123403788[110] = 0.5*state[4];
   out_1018911972123403788[111] = 0;
   out_1018911972123403788[112] = 0;
   out_1018911972123403788[113] = 0;
   out_1018911972123403788[114] = 0;
   out_1018911972123403788[115] = 0;
   out_1018911972123403788[116] = 0;
   out_1018911972123403788[117] = 0;
   out_1018911972123403788[118] = 0;
   out_1018911972123403788[119] = 0;
   out_1018911972123403788[120] = 0;
   out_1018911972123403788[121] = 0;
   out_1018911972123403788[122] = 0;
   out_1018911972123403788[123] = 0;
   out_1018911972123403788[124] = 0;
   out_1018911972123403788[125] = 0;
   out_1018911972123403788[126] = 0;
   out_1018911972123403788[127] = 0;
   out_1018911972123403788[128] = 0;
   out_1018911972123403788[129] = 0.5*state[5];
   out_1018911972123403788[130] = -0.5*state[4];
   out_1018911972123403788[131] = 0.5*state[3];
   out_1018911972123403788[132] = 0;
   out_1018911972123403788[133] = 0;
   out_1018911972123403788[134] = 0;
   out_1018911972123403788[135] = 0;
   out_1018911972123403788[136] = 0;
   out_1018911972123403788[137] = 0;
   out_1018911972123403788[138] = 0;
   out_1018911972123403788[139] = 0;
   out_1018911972123403788[140] = 0;
   out_1018911972123403788[141] = 0;
   out_1018911972123403788[142] = 0;
   out_1018911972123403788[143] = 0;
   out_1018911972123403788[144] = 0;
   out_1018911972123403788[145] = 0;
   out_1018911972123403788[146] = 0;
   out_1018911972123403788[147] = 0;
   out_1018911972123403788[148] = 0;
   out_1018911972123403788[149] = 0;
   out_1018911972123403788[150] = 0;
   out_1018911972123403788[151] = 0;
   out_1018911972123403788[152] = 0;
   out_1018911972123403788[153] = 1.0;
   out_1018911972123403788[154] = 0;
   out_1018911972123403788[155] = 0;
   out_1018911972123403788[156] = 0;
   out_1018911972123403788[157] = 0;
   out_1018911972123403788[158] = 0;
   out_1018911972123403788[159] = 0;
   out_1018911972123403788[160] = 0;
   out_1018911972123403788[161] = 0;
   out_1018911972123403788[162] = 0;
   out_1018911972123403788[163] = 0;
   out_1018911972123403788[164] = 0;
   out_1018911972123403788[165] = 0;
   out_1018911972123403788[166] = 0;
   out_1018911972123403788[167] = 0;
   out_1018911972123403788[168] = 0;
   out_1018911972123403788[169] = 0;
   out_1018911972123403788[170] = 0;
   out_1018911972123403788[171] = 0;
   out_1018911972123403788[172] = 0;
   out_1018911972123403788[173] = 0;
   out_1018911972123403788[174] = 0;
   out_1018911972123403788[175] = 1.0;
   out_1018911972123403788[176] = 0;
   out_1018911972123403788[177] = 0;
   out_1018911972123403788[178] = 0;
   out_1018911972123403788[179] = 0;
   out_1018911972123403788[180] = 0;
   out_1018911972123403788[181] = 0;
   out_1018911972123403788[182] = 0;
   out_1018911972123403788[183] = 0;
   out_1018911972123403788[184] = 0;
   out_1018911972123403788[185] = 0;
   out_1018911972123403788[186] = 0;
   out_1018911972123403788[187] = 0;
   out_1018911972123403788[188] = 0;
   out_1018911972123403788[189] = 0;
   out_1018911972123403788[190] = 0;
   out_1018911972123403788[191] = 0;
   out_1018911972123403788[192] = 0;
   out_1018911972123403788[193] = 0;
   out_1018911972123403788[194] = 0;
   out_1018911972123403788[195] = 0;
   out_1018911972123403788[196] = 0;
   out_1018911972123403788[197] = 1.0;
   out_1018911972123403788[198] = 0;
   out_1018911972123403788[199] = 0;
   out_1018911972123403788[200] = 0;
   out_1018911972123403788[201] = 0;
   out_1018911972123403788[202] = 0;
   out_1018911972123403788[203] = 0;
   out_1018911972123403788[204] = 0;
   out_1018911972123403788[205] = 0;
   out_1018911972123403788[206] = 0;
   out_1018911972123403788[207] = 0;
   out_1018911972123403788[208] = 0;
   out_1018911972123403788[209] = 0;
   out_1018911972123403788[210] = 0;
   out_1018911972123403788[211] = 0;
   out_1018911972123403788[212] = 0;
   out_1018911972123403788[213] = 0;
   out_1018911972123403788[214] = 0;
   out_1018911972123403788[215] = 0;
   out_1018911972123403788[216] = 0;
   out_1018911972123403788[217] = 0;
   out_1018911972123403788[218] = 0;
   out_1018911972123403788[219] = 1.0;
   out_1018911972123403788[220] = 0;
   out_1018911972123403788[221] = 0;
   out_1018911972123403788[222] = 0;
   out_1018911972123403788[223] = 0;
   out_1018911972123403788[224] = 0;
   out_1018911972123403788[225] = 0;
   out_1018911972123403788[226] = 0;
   out_1018911972123403788[227] = 0;
   out_1018911972123403788[228] = 0;
   out_1018911972123403788[229] = 0;
   out_1018911972123403788[230] = 0;
   out_1018911972123403788[231] = 0;
   out_1018911972123403788[232] = 0;
   out_1018911972123403788[233] = 0;
   out_1018911972123403788[234] = 0;
   out_1018911972123403788[235] = 0;
   out_1018911972123403788[236] = 0;
   out_1018911972123403788[237] = 0;
   out_1018911972123403788[238] = 0;
   out_1018911972123403788[239] = 0;
   out_1018911972123403788[240] = 0;
   out_1018911972123403788[241] = 1.0;
   out_1018911972123403788[242] = 0;
   out_1018911972123403788[243] = 0;
   out_1018911972123403788[244] = 0;
   out_1018911972123403788[245] = 0;
   out_1018911972123403788[246] = 0;
   out_1018911972123403788[247] = 0;
   out_1018911972123403788[248] = 0;
   out_1018911972123403788[249] = 0;
   out_1018911972123403788[250] = 0;
   out_1018911972123403788[251] = 0;
   out_1018911972123403788[252] = 0;
   out_1018911972123403788[253] = 0;
   out_1018911972123403788[254] = 0;
   out_1018911972123403788[255] = 0;
   out_1018911972123403788[256] = 0;
   out_1018911972123403788[257] = 0;
   out_1018911972123403788[258] = 0;
   out_1018911972123403788[259] = 0;
   out_1018911972123403788[260] = 0;
   out_1018911972123403788[261] = 0;
   out_1018911972123403788[262] = 0;
   out_1018911972123403788[263] = 1.0;
   out_1018911972123403788[264] = 0;
   out_1018911972123403788[265] = 0;
   out_1018911972123403788[266] = 0;
   out_1018911972123403788[267] = 0;
   out_1018911972123403788[268] = 0;
   out_1018911972123403788[269] = 0;
   out_1018911972123403788[270] = 0;
   out_1018911972123403788[271] = 0;
   out_1018911972123403788[272] = 0;
   out_1018911972123403788[273] = 0;
   out_1018911972123403788[274] = 0;
   out_1018911972123403788[275] = 0;
   out_1018911972123403788[276] = 0;
   out_1018911972123403788[277] = 0;
   out_1018911972123403788[278] = 0;
   out_1018911972123403788[279] = 0;
   out_1018911972123403788[280] = 0;
   out_1018911972123403788[281] = 0;
   out_1018911972123403788[282] = 0;
   out_1018911972123403788[283] = 0;
   out_1018911972123403788[284] = 0;
   out_1018911972123403788[285] = 1.0;
   out_1018911972123403788[286] = 0;
   out_1018911972123403788[287] = 0;
   out_1018911972123403788[288] = 0;
   out_1018911972123403788[289] = 0;
   out_1018911972123403788[290] = 0;
   out_1018911972123403788[291] = 0;
   out_1018911972123403788[292] = 0;
   out_1018911972123403788[293] = 0;
   out_1018911972123403788[294] = 0;
   out_1018911972123403788[295] = 0;
   out_1018911972123403788[296] = 0;
   out_1018911972123403788[297] = 0;
   out_1018911972123403788[298] = 0;
   out_1018911972123403788[299] = 0;
   out_1018911972123403788[300] = 0;
   out_1018911972123403788[301] = 0;
   out_1018911972123403788[302] = 0;
   out_1018911972123403788[303] = 0;
   out_1018911972123403788[304] = 0;
   out_1018911972123403788[305] = 0;
   out_1018911972123403788[306] = 0;
   out_1018911972123403788[307] = 1.0;
   out_1018911972123403788[308] = 0;
   out_1018911972123403788[309] = 0;
   out_1018911972123403788[310] = 0;
   out_1018911972123403788[311] = 0;
   out_1018911972123403788[312] = 0;
   out_1018911972123403788[313] = 0;
   out_1018911972123403788[314] = 0;
   out_1018911972123403788[315] = 0;
   out_1018911972123403788[316] = 0;
   out_1018911972123403788[317] = 0;
   out_1018911972123403788[318] = 0;
   out_1018911972123403788[319] = 0;
   out_1018911972123403788[320] = 0;
   out_1018911972123403788[321] = 0;
   out_1018911972123403788[322] = 0;
   out_1018911972123403788[323] = 0;
   out_1018911972123403788[324] = 0;
   out_1018911972123403788[325] = 0;
   out_1018911972123403788[326] = 0;
   out_1018911972123403788[327] = 0;
   out_1018911972123403788[328] = 0;
   out_1018911972123403788[329] = 1.0;
   out_1018911972123403788[330] = 0;
   out_1018911972123403788[331] = 0;
   out_1018911972123403788[332] = 0;
   out_1018911972123403788[333] = 0;
   out_1018911972123403788[334] = 0;
   out_1018911972123403788[335] = 0;
   out_1018911972123403788[336] = 0;
   out_1018911972123403788[337] = 0;
   out_1018911972123403788[338] = 0;
   out_1018911972123403788[339] = 0;
   out_1018911972123403788[340] = 0;
   out_1018911972123403788[341] = 0;
   out_1018911972123403788[342] = 0;
   out_1018911972123403788[343] = 0;
   out_1018911972123403788[344] = 0;
   out_1018911972123403788[345] = 0;
   out_1018911972123403788[346] = 0;
   out_1018911972123403788[347] = 0;
   out_1018911972123403788[348] = 0;
   out_1018911972123403788[349] = 0;
   out_1018911972123403788[350] = 0;
   out_1018911972123403788[351] = 1.0;
   out_1018911972123403788[352] = 0;
   out_1018911972123403788[353] = 0;
   out_1018911972123403788[354] = 0;
   out_1018911972123403788[355] = 0;
   out_1018911972123403788[356] = 0;
   out_1018911972123403788[357] = 0;
   out_1018911972123403788[358] = 0;
   out_1018911972123403788[359] = 0;
   out_1018911972123403788[360] = 0;
   out_1018911972123403788[361] = 0;
   out_1018911972123403788[362] = 0;
   out_1018911972123403788[363] = 0;
   out_1018911972123403788[364] = 0;
   out_1018911972123403788[365] = 0;
   out_1018911972123403788[366] = 0;
   out_1018911972123403788[367] = 0;
   out_1018911972123403788[368] = 0;
   out_1018911972123403788[369] = 0;
   out_1018911972123403788[370] = 0;
   out_1018911972123403788[371] = 0;
   out_1018911972123403788[372] = 0;
   out_1018911972123403788[373] = 1.0;
   out_1018911972123403788[374] = 0;
   out_1018911972123403788[375] = 0;
   out_1018911972123403788[376] = 0;
   out_1018911972123403788[377] = 0;
   out_1018911972123403788[378] = 0;
   out_1018911972123403788[379] = 0;
   out_1018911972123403788[380] = 0;
   out_1018911972123403788[381] = 0;
   out_1018911972123403788[382] = 0;
   out_1018911972123403788[383] = 0;
   out_1018911972123403788[384] = 0;
   out_1018911972123403788[385] = 0;
   out_1018911972123403788[386] = 0;
   out_1018911972123403788[387] = 0;
   out_1018911972123403788[388] = 0;
   out_1018911972123403788[389] = 0;
   out_1018911972123403788[390] = 0;
   out_1018911972123403788[391] = 0;
   out_1018911972123403788[392] = 0;
   out_1018911972123403788[393] = 0;
   out_1018911972123403788[394] = 0;
   out_1018911972123403788[395] = 1.0;
   out_1018911972123403788[396] = 0;
   out_1018911972123403788[397] = 0;
   out_1018911972123403788[398] = 0;
   out_1018911972123403788[399] = 0;
   out_1018911972123403788[400] = 0;
   out_1018911972123403788[401] = 0;
   out_1018911972123403788[402] = 0;
   out_1018911972123403788[403] = 0;
   out_1018911972123403788[404] = 0;
   out_1018911972123403788[405] = 0;
   out_1018911972123403788[406] = 0;
   out_1018911972123403788[407] = 0;
   out_1018911972123403788[408] = 0;
   out_1018911972123403788[409] = 0;
   out_1018911972123403788[410] = 0;
   out_1018911972123403788[411] = 0;
   out_1018911972123403788[412] = 0;
   out_1018911972123403788[413] = 0;
   out_1018911972123403788[414] = 0;
   out_1018911972123403788[415] = 0;
   out_1018911972123403788[416] = 0;
   out_1018911972123403788[417] = 1.0;
   out_1018911972123403788[418] = 0;
   out_1018911972123403788[419] = 0;
   out_1018911972123403788[420] = 0;
   out_1018911972123403788[421] = 0;
   out_1018911972123403788[422] = 0;
   out_1018911972123403788[423] = 0;
   out_1018911972123403788[424] = 0;
   out_1018911972123403788[425] = 0;
   out_1018911972123403788[426] = 0;
   out_1018911972123403788[427] = 0;
   out_1018911972123403788[428] = 0;
   out_1018911972123403788[429] = 0;
   out_1018911972123403788[430] = 0;
   out_1018911972123403788[431] = 0;
   out_1018911972123403788[432] = 0;
   out_1018911972123403788[433] = 0;
   out_1018911972123403788[434] = 0;
   out_1018911972123403788[435] = 0;
   out_1018911972123403788[436] = 0;
   out_1018911972123403788[437] = 0;
   out_1018911972123403788[438] = 0;
   out_1018911972123403788[439] = 1.0;
   out_1018911972123403788[440] = 0;
   out_1018911972123403788[441] = 0;
   out_1018911972123403788[442] = 0;
   out_1018911972123403788[443] = 0;
   out_1018911972123403788[444] = 0;
   out_1018911972123403788[445] = 0;
   out_1018911972123403788[446] = 0;
   out_1018911972123403788[447] = 0;
   out_1018911972123403788[448] = 0;
   out_1018911972123403788[449] = 0;
   out_1018911972123403788[450] = 0;
   out_1018911972123403788[451] = 0;
   out_1018911972123403788[452] = 0;
   out_1018911972123403788[453] = 0;
   out_1018911972123403788[454] = 0;
   out_1018911972123403788[455] = 0;
   out_1018911972123403788[456] = 0;
   out_1018911972123403788[457] = 0;
   out_1018911972123403788[458] = 0;
   out_1018911972123403788[459] = 0;
   out_1018911972123403788[460] = 0;
   out_1018911972123403788[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_946918272088411036) {
   out_946918272088411036[0] = dt*state[7] + state[0];
   out_946918272088411036[1] = dt*state[8] + state[1];
   out_946918272088411036[2] = dt*state[9] + state[2];
   out_946918272088411036[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_946918272088411036[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_946918272088411036[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_946918272088411036[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_946918272088411036[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_946918272088411036[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_946918272088411036[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_946918272088411036[10] = state[10];
   out_946918272088411036[11] = state[11];
   out_946918272088411036[12] = state[12];
   out_946918272088411036[13] = state[13];
   out_946918272088411036[14] = state[14];
   out_946918272088411036[15] = state[15];
   out_946918272088411036[16] = state[16];
   out_946918272088411036[17] = state[17];
   out_946918272088411036[18] = state[18];
   out_946918272088411036[19] = state[19];
   out_946918272088411036[20] = state[20];
   out_946918272088411036[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7622692614917921459) {
   out_7622692614917921459[0] = 1;
   out_7622692614917921459[1] = 0;
   out_7622692614917921459[2] = 0;
   out_7622692614917921459[3] = 0;
   out_7622692614917921459[4] = 0;
   out_7622692614917921459[5] = 0;
   out_7622692614917921459[6] = dt;
   out_7622692614917921459[7] = 0;
   out_7622692614917921459[8] = 0;
   out_7622692614917921459[9] = 0;
   out_7622692614917921459[10] = 0;
   out_7622692614917921459[11] = 0;
   out_7622692614917921459[12] = 0;
   out_7622692614917921459[13] = 0;
   out_7622692614917921459[14] = 0;
   out_7622692614917921459[15] = 0;
   out_7622692614917921459[16] = 0;
   out_7622692614917921459[17] = 0;
   out_7622692614917921459[18] = 0;
   out_7622692614917921459[19] = 0;
   out_7622692614917921459[20] = 0;
   out_7622692614917921459[21] = 0;
   out_7622692614917921459[22] = 1;
   out_7622692614917921459[23] = 0;
   out_7622692614917921459[24] = 0;
   out_7622692614917921459[25] = 0;
   out_7622692614917921459[26] = 0;
   out_7622692614917921459[27] = 0;
   out_7622692614917921459[28] = dt;
   out_7622692614917921459[29] = 0;
   out_7622692614917921459[30] = 0;
   out_7622692614917921459[31] = 0;
   out_7622692614917921459[32] = 0;
   out_7622692614917921459[33] = 0;
   out_7622692614917921459[34] = 0;
   out_7622692614917921459[35] = 0;
   out_7622692614917921459[36] = 0;
   out_7622692614917921459[37] = 0;
   out_7622692614917921459[38] = 0;
   out_7622692614917921459[39] = 0;
   out_7622692614917921459[40] = 0;
   out_7622692614917921459[41] = 0;
   out_7622692614917921459[42] = 0;
   out_7622692614917921459[43] = 0;
   out_7622692614917921459[44] = 1;
   out_7622692614917921459[45] = 0;
   out_7622692614917921459[46] = 0;
   out_7622692614917921459[47] = 0;
   out_7622692614917921459[48] = 0;
   out_7622692614917921459[49] = 0;
   out_7622692614917921459[50] = dt;
   out_7622692614917921459[51] = 0;
   out_7622692614917921459[52] = 0;
   out_7622692614917921459[53] = 0;
   out_7622692614917921459[54] = 0;
   out_7622692614917921459[55] = 0;
   out_7622692614917921459[56] = 0;
   out_7622692614917921459[57] = 0;
   out_7622692614917921459[58] = 0;
   out_7622692614917921459[59] = 0;
   out_7622692614917921459[60] = 0;
   out_7622692614917921459[61] = 0;
   out_7622692614917921459[62] = 0;
   out_7622692614917921459[63] = 0;
   out_7622692614917921459[64] = 0;
   out_7622692614917921459[65] = 0;
   out_7622692614917921459[66] = 1;
   out_7622692614917921459[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7622692614917921459[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7622692614917921459[69] = 0;
   out_7622692614917921459[70] = 0;
   out_7622692614917921459[71] = 0;
   out_7622692614917921459[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7622692614917921459[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7622692614917921459[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7622692614917921459[75] = 0;
   out_7622692614917921459[76] = 0;
   out_7622692614917921459[77] = 0;
   out_7622692614917921459[78] = 0;
   out_7622692614917921459[79] = 0;
   out_7622692614917921459[80] = 0;
   out_7622692614917921459[81] = 0;
   out_7622692614917921459[82] = 0;
   out_7622692614917921459[83] = 0;
   out_7622692614917921459[84] = 0;
   out_7622692614917921459[85] = 0;
   out_7622692614917921459[86] = 0;
   out_7622692614917921459[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7622692614917921459[88] = 1;
   out_7622692614917921459[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7622692614917921459[90] = 0;
   out_7622692614917921459[91] = 0;
   out_7622692614917921459[92] = 0;
   out_7622692614917921459[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7622692614917921459[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7622692614917921459[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7622692614917921459[96] = 0;
   out_7622692614917921459[97] = 0;
   out_7622692614917921459[98] = 0;
   out_7622692614917921459[99] = 0;
   out_7622692614917921459[100] = 0;
   out_7622692614917921459[101] = 0;
   out_7622692614917921459[102] = 0;
   out_7622692614917921459[103] = 0;
   out_7622692614917921459[104] = 0;
   out_7622692614917921459[105] = 0;
   out_7622692614917921459[106] = 0;
   out_7622692614917921459[107] = 0;
   out_7622692614917921459[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7622692614917921459[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7622692614917921459[110] = 1;
   out_7622692614917921459[111] = 0;
   out_7622692614917921459[112] = 0;
   out_7622692614917921459[113] = 0;
   out_7622692614917921459[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7622692614917921459[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7622692614917921459[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7622692614917921459[117] = 0;
   out_7622692614917921459[118] = 0;
   out_7622692614917921459[119] = 0;
   out_7622692614917921459[120] = 0;
   out_7622692614917921459[121] = 0;
   out_7622692614917921459[122] = 0;
   out_7622692614917921459[123] = 0;
   out_7622692614917921459[124] = 0;
   out_7622692614917921459[125] = 0;
   out_7622692614917921459[126] = 0;
   out_7622692614917921459[127] = 0;
   out_7622692614917921459[128] = 0;
   out_7622692614917921459[129] = 0;
   out_7622692614917921459[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7622692614917921459[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7622692614917921459[132] = 1;
   out_7622692614917921459[133] = 0;
   out_7622692614917921459[134] = 0;
   out_7622692614917921459[135] = 0;
   out_7622692614917921459[136] = 0;
   out_7622692614917921459[137] = 0;
   out_7622692614917921459[138] = 0;
   out_7622692614917921459[139] = 0;
   out_7622692614917921459[140] = 0;
   out_7622692614917921459[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7622692614917921459[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7622692614917921459[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7622692614917921459[144] = 0;
   out_7622692614917921459[145] = 0;
   out_7622692614917921459[146] = 0;
   out_7622692614917921459[147] = 0;
   out_7622692614917921459[148] = 0;
   out_7622692614917921459[149] = 0;
   out_7622692614917921459[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7622692614917921459[151] = 0;
   out_7622692614917921459[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7622692614917921459[153] = 0;
   out_7622692614917921459[154] = 1;
   out_7622692614917921459[155] = 0;
   out_7622692614917921459[156] = 0;
   out_7622692614917921459[157] = 0;
   out_7622692614917921459[158] = 0;
   out_7622692614917921459[159] = 0;
   out_7622692614917921459[160] = 0;
   out_7622692614917921459[161] = 0;
   out_7622692614917921459[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7622692614917921459[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7622692614917921459[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7622692614917921459[165] = 0;
   out_7622692614917921459[166] = 0;
   out_7622692614917921459[167] = 0;
   out_7622692614917921459[168] = 0;
   out_7622692614917921459[169] = 0;
   out_7622692614917921459[170] = 0;
   out_7622692614917921459[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7622692614917921459[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7622692614917921459[173] = 0;
   out_7622692614917921459[174] = 0;
   out_7622692614917921459[175] = 0;
   out_7622692614917921459[176] = 1;
   out_7622692614917921459[177] = 0;
   out_7622692614917921459[178] = 0;
   out_7622692614917921459[179] = 0;
   out_7622692614917921459[180] = 0;
   out_7622692614917921459[181] = 0;
   out_7622692614917921459[182] = 0;
   out_7622692614917921459[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7622692614917921459[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7622692614917921459[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7622692614917921459[186] = 0;
   out_7622692614917921459[187] = 0;
   out_7622692614917921459[188] = 0;
   out_7622692614917921459[189] = 0;
   out_7622692614917921459[190] = 0;
   out_7622692614917921459[191] = 0;
   out_7622692614917921459[192] = 0;
   out_7622692614917921459[193] = 0;
   out_7622692614917921459[194] = 0;
   out_7622692614917921459[195] = 0;
   out_7622692614917921459[196] = 0;
   out_7622692614917921459[197] = 0;
   out_7622692614917921459[198] = 1;
   out_7622692614917921459[199] = 0;
   out_7622692614917921459[200] = 0;
   out_7622692614917921459[201] = 0;
   out_7622692614917921459[202] = 0;
   out_7622692614917921459[203] = 0;
   out_7622692614917921459[204] = 0;
   out_7622692614917921459[205] = 0;
   out_7622692614917921459[206] = 0;
   out_7622692614917921459[207] = 0;
   out_7622692614917921459[208] = 0;
   out_7622692614917921459[209] = 0;
   out_7622692614917921459[210] = 0;
   out_7622692614917921459[211] = 0;
   out_7622692614917921459[212] = 0;
   out_7622692614917921459[213] = 0;
   out_7622692614917921459[214] = 0;
   out_7622692614917921459[215] = 0;
   out_7622692614917921459[216] = 0;
   out_7622692614917921459[217] = 0;
   out_7622692614917921459[218] = 0;
   out_7622692614917921459[219] = 0;
   out_7622692614917921459[220] = 1;
   out_7622692614917921459[221] = 0;
   out_7622692614917921459[222] = 0;
   out_7622692614917921459[223] = 0;
   out_7622692614917921459[224] = 0;
   out_7622692614917921459[225] = 0;
   out_7622692614917921459[226] = 0;
   out_7622692614917921459[227] = 0;
   out_7622692614917921459[228] = 0;
   out_7622692614917921459[229] = 0;
   out_7622692614917921459[230] = 0;
   out_7622692614917921459[231] = 0;
   out_7622692614917921459[232] = 0;
   out_7622692614917921459[233] = 0;
   out_7622692614917921459[234] = 0;
   out_7622692614917921459[235] = 0;
   out_7622692614917921459[236] = 0;
   out_7622692614917921459[237] = 0;
   out_7622692614917921459[238] = 0;
   out_7622692614917921459[239] = 0;
   out_7622692614917921459[240] = 0;
   out_7622692614917921459[241] = 0;
   out_7622692614917921459[242] = 1;
   out_7622692614917921459[243] = 0;
   out_7622692614917921459[244] = 0;
   out_7622692614917921459[245] = 0;
   out_7622692614917921459[246] = 0;
   out_7622692614917921459[247] = 0;
   out_7622692614917921459[248] = 0;
   out_7622692614917921459[249] = 0;
   out_7622692614917921459[250] = 0;
   out_7622692614917921459[251] = 0;
   out_7622692614917921459[252] = 0;
   out_7622692614917921459[253] = 0;
   out_7622692614917921459[254] = 0;
   out_7622692614917921459[255] = 0;
   out_7622692614917921459[256] = 0;
   out_7622692614917921459[257] = 0;
   out_7622692614917921459[258] = 0;
   out_7622692614917921459[259] = 0;
   out_7622692614917921459[260] = 0;
   out_7622692614917921459[261] = 0;
   out_7622692614917921459[262] = 0;
   out_7622692614917921459[263] = 0;
   out_7622692614917921459[264] = 1;
   out_7622692614917921459[265] = 0;
   out_7622692614917921459[266] = 0;
   out_7622692614917921459[267] = 0;
   out_7622692614917921459[268] = 0;
   out_7622692614917921459[269] = 0;
   out_7622692614917921459[270] = 0;
   out_7622692614917921459[271] = 0;
   out_7622692614917921459[272] = 0;
   out_7622692614917921459[273] = 0;
   out_7622692614917921459[274] = 0;
   out_7622692614917921459[275] = 0;
   out_7622692614917921459[276] = 0;
   out_7622692614917921459[277] = 0;
   out_7622692614917921459[278] = 0;
   out_7622692614917921459[279] = 0;
   out_7622692614917921459[280] = 0;
   out_7622692614917921459[281] = 0;
   out_7622692614917921459[282] = 0;
   out_7622692614917921459[283] = 0;
   out_7622692614917921459[284] = 0;
   out_7622692614917921459[285] = 0;
   out_7622692614917921459[286] = 1;
   out_7622692614917921459[287] = 0;
   out_7622692614917921459[288] = 0;
   out_7622692614917921459[289] = 0;
   out_7622692614917921459[290] = 0;
   out_7622692614917921459[291] = 0;
   out_7622692614917921459[292] = 0;
   out_7622692614917921459[293] = 0;
   out_7622692614917921459[294] = 0;
   out_7622692614917921459[295] = 0;
   out_7622692614917921459[296] = 0;
   out_7622692614917921459[297] = 0;
   out_7622692614917921459[298] = 0;
   out_7622692614917921459[299] = 0;
   out_7622692614917921459[300] = 0;
   out_7622692614917921459[301] = 0;
   out_7622692614917921459[302] = 0;
   out_7622692614917921459[303] = 0;
   out_7622692614917921459[304] = 0;
   out_7622692614917921459[305] = 0;
   out_7622692614917921459[306] = 0;
   out_7622692614917921459[307] = 0;
   out_7622692614917921459[308] = 1;
   out_7622692614917921459[309] = 0;
   out_7622692614917921459[310] = 0;
   out_7622692614917921459[311] = 0;
   out_7622692614917921459[312] = 0;
   out_7622692614917921459[313] = 0;
   out_7622692614917921459[314] = 0;
   out_7622692614917921459[315] = 0;
   out_7622692614917921459[316] = 0;
   out_7622692614917921459[317] = 0;
   out_7622692614917921459[318] = 0;
   out_7622692614917921459[319] = 0;
   out_7622692614917921459[320] = 0;
   out_7622692614917921459[321] = 0;
   out_7622692614917921459[322] = 0;
   out_7622692614917921459[323] = 0;
   out_7622692614917921459[324] = 0;
   out_7622692614917921459[325] = 0;
   out_7622692614917921459[326] = 0;
   out_7622692614917921459[327] = 0;
   out_7622692614917921459[328] = 0;
   out_7622692614917921459[329] = 0;
   out_7622692614917921459[330] = 1;
   out_7622692614917921459[331] = 0;
   out_7622692614917921459[332] = 0;
   out_7622692614917921459[333] = 0;
   out_7622692614917921459[334] = 0;
   out_7622692614917921459[335] = 0;
   out_7622692614917921459[336] = 0;
   out_7622692614917921459[337] = 0;
   out_7622692614917921459[338] = 0;
   out_7622692614917921459[339] = 0;
   out_7622692614917921459[340] = 0;
   out_7622692614917921459[341] = 0;
   out_7622692614917921459[342] = 0;
   out_7622692614917921459[343] = 0;
   out_7622692614917921459[344] = 0;
   out_7622692614917921459[345] = 0;
   out_7622692614917921459[346] = 0;
   out_7622692614917921459[347] = 0;
   out_7622692614917921459[348] = 0;
   out_7622692614917921459[349] = 0;
   out_7622692614917921459[350] = 0;
   out_7622692614917921459[351] = 0;
   out_7622692614917921459[352] = 1;
   out_7622692614917921459[353] = 0;
   out_7622692614917921459[354] = 0;
   out_7622692614917921459[355] = 0;
   out_7622692614917921459[356] = 0;
   out_7622692614917921459[357] = 0;
   out_7622692614917921459[358] = 0;
   out_7622692614917921459[359] = 0;
   out_7622692614917921459[360] = 0;
   out_7622692614917921459[361] = 0;
   out_7622692614917921459[362] = 0;
   out_7622692614917921459[363] = 0;
   out_7622692614917921459[364] = 0;
   out_7622692614917921459[365] = 0;
   out_7622692614917921459[366] = 0;
   out_7622692614917921459[367] = 0;
   out_7622692614917921459[368] = 0;
   out_7622692614917921459[369] = 0;
   out_7622692614917921459[370] = 0;
   out_7622692614917921459[371] = 0;
   out_7622692614917921459[372] = 0;
   out_7622692614917921459[373] = 0;
   out_7622692614917921459[374] = 1;
   out_7622692614917921459[375] = 0;
   out_7622692614917921459[376] = 0;
   out_7622692614917921459[377] = 0;
   out_7622692614917921459[378] = 0;
   out_7622692614917921459[379] = 0;
   out_7622692614917921459[380] = 0;
   out_7622692614917921459[381] = 0;
   out_7622692614917921459[382] = 0;
   out_7622692614917921459[383] = 0;
   out_7622692614917921459[384] = 0;
   out_7622692614917921459[385] = 0;
   out_7622692614917921459[386] = 0;
   out_7622692614917921459[387] = 0;
   out_7622692614917921459[388] = 0;
   out_7622692614917921459[389] = 0;
   out_7622692614917921459[390] = 0;
   out_7622692614917921459[391] = 0;
   out_7622692614917921459[392] = 0;
   out_7622692614917921459[393] = 0;
   out_7622692614917921459[394] = 0;
   out_7622692614917921459[395] = 0;
   out_7622692614917921459[396] = 1;
   out_7622692614917921459[397] = 0;
   out_7622692614917921459[398] = 0;
   out_7622692614917921459[399] = 0;
   out_7622692614917921459[400] = 0;
   out_7622692614917921459[401] = 0;
   out_7622692614917921459[402] = 0;
   out_7622692614917921459[403] = 0;
   out_7622692614917921459[404] = 0;
   out_7622692614917921459[405] = 0;
   out_7622692614917921459[406] = 0;
   out_7622692614917921459[407] = 0;
   out_7622692614917921459[408] = 0;
   out_7622692614917921459[409] = 0;
   out_7622692614917921459[410] = 0;
   out_7622692614917921459[411] = 0;
   out_7622692614917921459[412] = 0;
   out_7622692614917921459[413] = 0;
   out_7622692614917921459[414] = 0;
   out_7622692614917921459[415] = 0;
   out_7622692614917921459[416] = 0;
   out_7622692614917921459[417] = 0;
   out_7622692614917921459[418] = 1;
   out_7622692614917921459[419] = 0;
   out_7622692614917921459[420] = 0;
   out_7622692614917921459[421] = 0;
   out_7622692614917921459[422] = 0;
   out_7622692614917921459[423] = 0;
   out_7622692614917921459[424] = 0;
   out_7622692614917921459[425] = 0;
   out_7622692614917921459[426] = 0;
   out_7622692614917921459[427] = 0;
   out_7622692614917921459[428] = 0;
   out_7622692614917921459[429] = 0;
   out_7622692614917921459[430] = 0;
   out_7622692614917921459[431] = 0;
   out_7622692614917921459[432] = 0;
   out_7622692614917921459[433] = 0;
   out_7622692614917921459[434] = 0;
   out_7622692614917921459[435] = 0;
   out_7622692614917921459[436] = 0;
   out_7622692614917921459[437] = 0;
   out_7622692614917921459[438] = 0;
   out_7622692614917921459[439] = 0;
   out_7622692614917921459[440] = 1;
}
void h_4(double *state, double *unused, double *out_4921921813527815973) {
   out_4921921813527815973[0] = state[10] + state[13];
   out_4921921813527815973[1] = state[11] + state[14];
   out_4921921813527815973[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5733132674020333042) {
   out_5733132674020333042[0] = 0;
   out_5733132674020333042[1] = 0;
   out_5733132674020333042[2] = 0;
   out_5733132674020333042[3] = 0;
   out_5733132674020333042[4] = 0;
   out_5733132674020333042[5] = 0;
   out_5733132674020333042[6] = 0;
   out_5733132674020333042[7] = 0;
   out_5733132674020333042[8] = 0;
   out_5733132674020333042[9] = 0;
   out_5733132674020333042[10] = 1;
   out_5733132674020333042[11] = 0;
   out_5733132674020333042[12] = 0;
   out_5733132674020333042[13] = 1;
   out_5733132674020333042[14] = 0;
   out_5733132674020333042[15] = 0;
   out_5733132674020333042[16] = 0;
   out_5733132674020333042[17] = 0;
   out_5733132674020333042[18] = 0;
   out_5733132674020333042[19] = 0;
   out_5733132674020333042[20] = 0;
   out_5733132674020333042[21] = 0;
   out_5733132674020333042[22] = 0;
   out_5733132674020333042[23] = 0;
   out_5733132674020333042[24] = 0;
   out_5733132674020333042[25] = 0;
   out_5733132674020333042[26] = 0;
   out_5733132674020333042[27] = 0;
   out_5733132674020333042[28] = 0;
   out_5733132674020333042[29] = 0;
   out_5733132674020333042[30] = 0;
   out_5733132674020333042[31] = 0;
   out_5733132674020333042[32] = 0;
   out_5733132674020333042[33] = 1;
   out_5733132674020333042[34] = 0;
   out_5733132674020333042[35] = 0;
   out_5733132674020333042[36] = 1;
   out_5733132674020333042[37] = 0;
   out_5733132674020333042[38] = 0;
   out_5733132674020333042[39] = 0;
   out_5733132674020333042[40] = 0;
   out_5733132674020333042[41] = 0;
   out_5733132674020333042[42] = 0;
   out_5733132674020333042[43] = 0;
   out_5733132674020333042[44] = 0;
   out_5733132674020333042[45] = 0;
   out_5733132674020333042[46] = 0;
   out_5733132674020333042[47] = 0;
   out_5733132674020333042[48] = 0;
   out_5733132674020333042[49] = 0;
   out_5733132674020333042[50] = 0;
   out_5733132674020333042[51] = 0;
   out_5733132674020333042[52] = 0;
   out_5733132674020333042[53] = 0;
   out_5733132674020333042[54] = 0;
   out_5733132674020333042[55] = 0;
   out_5733132674020333042[56] = 1;
   out_5733132674020333042[57] = 0;
   out_5733132674020333042[58] = 0;
   out_5733132674020333042[59] = 1;
   out_5733132674020333042[60] = 0;
   out_5733132674020333042[61] = 0;
   out_5733132674020333042[62] = 0;
   out_5733132674020333042[63] = 0;
   out_5733132674020333042[64] = 0;
   out_5733132674020333042[65] = 0;
}
void h_9(double *state, double *unused, double *out_5323875262485216062) {
   out_5323875262485216062[0] = state[10];
   out_5323875262485216062[1] = state[11];
   out_5323875262485216062[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8556443663334441091) {
   out_8556443663334441091[0] = 0;
   out_8556443663334441091[1] = 0;
   out_8556443663334441091[2] = 0;
   out_8556443663334441091[3] = 0;
   out_8556443663334441091[4] = 0;
   out_8556443663334441091[5] = 0;
   out_8556443663334441091[6] = 0;
   out_8556443663334441091[7] = 0;
   out_8556443663334441091[8] = 0;
   out_8556443663334441091[9] = 0;
   out_8556443663334441091[10] = 1;
   out_8556443663334441091[11] = 0;
   out_8556443663334441091[12] = 0;
   out_8556443663334441091[13] = 0;
   out_8556443663334441091[14] = 0;
   out_8556443663334441091[15] = 0;
   out_8556443663334441091[16] = 0;
   out_8556443663334441091[17] = 0;
   out_8556443663334441091[18] = 0;
   out_8556443663334441091[19] = 0;
   out_8556443663334441091[20] = 0;
   out_8556443663334441091[21] = 0;
   out_8556443663334441091[22] = 0;
   out_8556443663334441091[23] = 0;
   out_8556443663334441091[24] = 0;
   out_8556443663334441091[25] = 0;
   out_8556443663334441091[26] = 0;
   out_8556443663334441091[27] = 0;
   out_8556443663334441091[28] = 0;
   out_8556443663334441091[29] = 0;
   out_8556443663334441091[30] = 0;
   out_8556443663334441091[31] = 0;
   out_8556443663334441091[32] = 0;
   out_8556443663334441091[33] = 1;
   out_8556443663334441091[34] = 0;
   out_8556443663334441091[35] = 0;
   out_8556443663334441091[36] = 0;
   out_8556443663334441091[37] = 0;
   out_8556443663334441091[38] = 0;
   out_8556443663334441091[39] = 0;
   out_8556443663334441091[40] = 0;
   out_8556443663334441091[41] = 0;
   out_8556443663334441091[42] = 0;
   out_8556443663334441091[43] = 0;
   out_8556443663334441091[44] = 0;
   out_8556443663334441091[45] = 0;
   out_8556443663334441091[46] = 0;
   out_8556443663334441091[47] = 0;
   out_8556443663334441091[48] = 0;
   out_8556443663334441091[49] = 0;
   out_8556443663334441091[50] = 0;
   out_8556443663334441091[51] = 0;
   out_8556443663334441091[52] = 0;
   out_8556443663334441091[53] = 0;
   out_8556443663334441091[54] = 0;
   out_8556443663334441091[55] = 0;
   out_8556443663334441091[56] = 1;
   out_8556443663334441091[57] = 0;
   out_8556443663334441091[58] = 0;
   out_8556443663334441091[59] = 0;
   out_8556443663334441091[60] = 0;
   out_8556443663334441091[61] = 0;
   out_8556443663334441091[62] = 0;
   out_8556443663334441091[63] = 0;
   out_8556443663334441091[64] = 0;
   out_8556443663334441091[65] = 0;
}
void h_10(double *state, double *unused, double *out_3114740063238958036) {
   out_3114740063238958036[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3114740063238958036[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3114740063238958036[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8539081862252184483) {
   out_8539081862252184483[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8539081862252184483[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8539081862252184483[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8539081862252184483[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8539081862252184483[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8539081862252184483[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8539081862252184483[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8539081862252184483[7] = 0;
   out_8539081862252184483[8] = 0;
   out_8539081862252184483[9] = 0;
   out_8539081862252184483[10] = 0;
   out_8539081862252184483[11] = 0;
   out_8539081862252184483[12] = 0;
   out_8539081862252184483[13] = 0;
   out_8539081862252184483[14] = 0;
   out_8539081862252184483[15] = 0;
   out_8539081862252184483[16] = 1;
   out_8539081862252184483[17] = 0;
   out_8539081862252184483[18] = 0;
   out_8539081862252184483[19] = 1;
   out_8539081862252184483[20] = 0;
   out_8539081862252184483[21] = 0;
   out_8539081862252184483[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8539081862252184483[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8539081862252184483[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8539081862252184483[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8539081862252184483[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8539081862252184483[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8539081862252184483[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8539081862252184483[29] = 0;
   out_8539081862252184483[30] = 0;
   out_8539081862252184483[31] = 0;
   out_8539081862252184483[32] = 0;
   out_8539081862252184483[33] = 0;
   out_8539081862252184483[34] = 0;
   out_8539081862252184483[35] = 0;
   out_8539081862252184483[36] = 0;
   out_8539081862252184483[37] = 0;
   out_8539081862252184483[38] = 0;
   out_8539081862252184483[39] = 1;
   out_8539081862252184483[40] = 0;
   out_8539081862252184483[41] = 0;
   out_8539081862252184483[42] = 1;
   out_8539081862252184483[43] = 0;
   out_8539081862252184483[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8539081862252184483[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8539081862252184483[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8539081862252184483[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8539081862252184483[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8539081862252184483[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8539081862252184483[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8539081862252184483[51] = 0;
   out_8539081862252184483[52] = 0;
   out_8539081862252184483[53] = 0;
   out_8539081862252184483[54] = 0;
   out_8539081862252184483[55] = 0;
   out_8539081862252184483[56] = 0;
   out_8539081862252184483[57] = 0;
   out_8539081862252184483[58] = 0;
   out_8539081862252184483[59] = 0;
   out_8539081862252184483[60] = 0;
   out_8539081862252184483[61] = 0;
   out_8539081862252184483[62] = 1;
   out_8539081862252184483[63] = 0;
   out_8539081862252184483[64] = 0;
   out_8539081862252184483[65] = 1;
}
void h_12(double *state, double *unused, double *out_6123549659445635911) {
   out_6123549659445635911[0] = state[0];
   out_6123549659445635911[1] = state[1];
   out_6123549659445635911[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5112033648972739375) {
   out_5112033648972739375[0] = 1;
   out_5112033648972739375[1] = 0;
   out_5112033648972739375[2] = 0;
   out_5112033648972739375[3] = 0;
   out_5112033648972739375[4] = 0;
   out_5112033648972739375[5] = 0;
   out_5112033648972739375[6] = 0;
   out_5112033648972739375[7] = 0;
   out_5112033648972739375[8] = 0;
   out_5112033648972739375[9] = 0;
   out_5112033648972739375[10] = 0;
   out_5112033648972739375[11] = 0;
   out_5112033648972739375[12] = 0;
   out_5112033648972739375[13] = 0;
   out_5112033648972739375[14] = 0;
   out_5112033648972739375[15] = 0;
   out_5112033648972739375[16] = 0;
   out_5112033648972739375[17] = 0;
   out_5112033648972739375[18] = 0;
   out_5112033648972739375[19] = 0;
   out_5112033648972739375[20] = 0;
   out_5112033648972739375[21] = 0;
   out_5112033648972739375[22] = 0;
   out_5112033648972739375[23] = 1;
   out_5112033648972739375[24] = 0;
   out_5112033648972739375[25] = 0;
   out_5112033648972739375[26] = 0;
   out_5112033648972739375[27] = 0;
   out_5112033648972739375[28] = 0;
   out_5112033648972739375[29] = 0;
   out_5112033648972739375[30] = 0;
   out_5112033648972739375[31] = 0;
   out_5112033648972739375[32] = 0;
   out_5112033648972739375[33] = 0;
   out_5112033648972739375[34] = 0;
   out_5112033648972739375[35] = 0;
   out_5112033648972739375[36] = 0;
   out_5112033648972739375[37] = 0;
   out_5112033648972739375[38] = 0;
   out_5112033648972739375[39] = 0;
   out_5112033648972739375[40] = 0;
   out_5112033648972739375[41] = 0;
   out_5112033648972739375[42] = 0;
   out_5112033648972739375[43] = 0;
   out_5112033648972739375[44] = 0;
   out_5112033648972739375[45] = 0;
   out_5112033648972739375[46] = 1;
   out_5112033648972739375[47] = 0;
   out_5112033648972739375[48] = 0;
   out_5112033648972739375[49] = 0;
   out_5112033648972739375[50] = 0;
   out_5112033648972739375[51] = 0;
   out_5112033648972739375[52] = 0;
   out_5112033648972739375[53] = 0;
   out_5112033648972739375[54] = 0;
   out_5112033648972739375[55] = 0;
   out_5112033648972739375[56] = 0;
   out_5112033648972739375[57] = 0;
   out_5112033648972739375[58] = 0;
   out_5112033648972739375[59] = 0;
   out_5112033648972739375[60] = 0;
   out_5112033648972739375[61] = 0;
   out_5112033648972739375[62] = 0;
   out_5112033648972739375[63] = 0;
   out_5112033648972739375[64] = 0;
   out_5112033648972739375[65] = 0;
}
void h_35(double *state, double *unused, double *out_1769556361636079911) {
   out_1769556361636079911[0] = state[7];
   out_1769556361636079911[1] = state[8];
   out_1769556361636079911[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2366470616647725666) {
   out_2366470616647725666[0] = 0;
   out_2366470616647725666[1] = 0;
   out_2366470616647725666[2] = 0;
   out_2366470616647725666[3] = 0;
   out_2366470616647725666[4] = 0;
   out_2366470616647725666[5] = 0;
   out_2366470616647725666[6] = 0;
   out_2366470616647725666[7] = 1;
   out_2366470616647725666[8] = 0;
   out_2366470616647725666[9] = 0;
   out_2366470616647725666[10] = 0;
   out_2366470616647725666[11] = 0;
   out_2366470616647725666[12] = 0;
   out_2366470616647725666[13] = 0;
   out_2366470616647725666[14] = 0;
   out_2366470616647725666[15] = 0;
   out_2366470616647725666[16] = 0;
   out_2366470616647725666[17] = 0;
   out_2366470616647725666[18] = 0;
   out_2366470616647725666[19] = 0;
   out_2366470616647725666[20] = 0;
   out_2366470616647725666[21] = 0;
   out_2366470616647725666[22] = 0;
   out_2366470616647725666[23] = 0;
   out_2366470616647725666[24] = 0;
   out_2366470616647725666[25] = 0;
   out_2366470616647725666[26] = 0;
   out_2366470616647725666[27] = 0;
   out_2366470616647725666[28] = 0;
   out_2366470616647725666[29] = 0;
   out_2366470616647725666[30] = 1;
   out_2366470616647725666[31] = 0;
   out_2366470616647725666[32] = 0;
   out_2366470616647725666[33] = 0;
   out_2366470616647725666[34] = 0;
   out_2366470616647725666[35] = 0;
   out_2366470616647725666[36] = 0;
   out_2366470616647725666[37] = 0;
   out_2366470616647725666[38] = 0;
   out_2366470616647725666[39] = 0;
   out_2366470616647725666[40] = 0;
   out_2366470616647725666[41] = 0;
   out_2366470616647725666[42] = 0;
   out_2366470616647725666[43] = 0;
   out_2366470616647725666[44] = 0;
   out_2366470616647725666[45] = 0;
   out_2366470616647725666[46] = 0;
   out_2366470616647725666[47] = 0;
   out_2366470616647725666[48] = 0;
   out_2366470616647725666[49] = 0;
   out_2366470616647725666[50] = 0;
   out_2366470616647725666[51] = 0;
   out_2366470616647725666[52] = 0;
   out_2366470616647725666[53] = 1;
   out_2366470616647725666[54] = 0;
   out_2366470616647725666[55] = 0;
   out_2366470616647725666[56] = 0;
   out_2366470616647725666[57] = 0;
   out_2366470616647725666[58] = 0;
   out_2366470616647725666[59] = 0;
   out_2366470616647725666[60] = 0;
   out_2366470616647725666[61] = 0;
   out_2366470616647725666[62] = 0;
   out_2366470616647725666[63] = 0;
   out_2366470616647725666[64] = 0;
   out_2366470616647725666[65] = 0;
}
void h_32(double *state, double *unused, double *out_560078100617833566) {
   out_560078100617833566[0] = state[3];
   out_560078100617833566[1] = state[4];
   out_560078100617833566[2] = state[5];
   out_560078100617833566[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1181373723339433063) {
   out_1181373723339433063[0] = 0;
   out_1181373723339433063[1] = 0;
   out_1181373723339433063[2] = 0;
   out_1181373723339433063[3] = 1;
   out_1181373723339433063[4] = 0;
   out_1181373723339433063[5] = 0;
   out_1181373723339433063[6] = 0;
   out_1181373723339433063[7] = 0;
   out_1181373723339433063[8] = 0;
   out_1181373723339433063[9] = 0;
   out_1181373723339433063[10] = 0;
   out_1181373723339433063[11] = 0;
   out_1181373723339433063[12] = 0;
   out_1181373723339433063[13] = 0;
   out_1181373723339433063[14] = 0;
   out_1181373723339433063[15] = 0;
   out_1181373723339433063[16] = 0;
   out_1181373723339433063[17] = 0;
   out_1181373723339433063[18] = 0;
   out_1181373723339433063[19] = 0;
   out_1181373723339433063[20] = 0;
   out_1181373723339433063[21] = 0;
   out_1181373723339433063[22] = 0;
   out_1181373723339433063[23] = 0;
   out_1181373723339433063[24] = 0;
   out_1181373723339433063[25] = 0;
   out_1181373723339433063[26] = 1;
   out_1181373723339433063[27] = 0;
   out_1181373723339433063[28] = 0;
   out_1181373723339433063[29] = 0;
   out_1181373723339433063[30] = 0;
   out_1181373723339433063[31] = 0;
   out_1181373723339433063[32] = 0;
   out_1181373723339433063[33] = 0;
   out_1181373723339433063[34] = 0;
   out_1181373723339433063[35] = 0;
   out_1181373723339433063[36] = 0;
   out_1181373723339433063[37] = 0;
   out_1181373723339433063[38] = 0;
   out_1181373723339433063[39] = 0;
   out_1181373723339433063[40] = 0;
   out_1181373723339433063[41] = 0;
   out_1181373723339433063[42] = 0;
   out_1181373723339433063[43] = 0;
   out_1181373723339433063[44] = 0;
   out_1181373723339433063[45] = 0;
   out_1181373723339433063[46] = 0;
   out_1181373723339433063[47] = 0;
   out_1181373723339433063[48] = 0;
   out_1181373723339433063[49] = 1;
   out_1181373723339433063[50] = 0;
   out_1181373723339433063[51] = 0;
   out_1181373723339433063[52] = 0;
   out_1181373723339433063[53] = 0;
   out_1181373723339433063[54] = 0;
   out_1181373723339433063[55] = 0;
   out_1181373723339433063[56] = 0;
   out_1181373723339433063[57] = 0;
   out_1181373723339433063[58] = 0;
   out_1181373723339433063[59] = 0;
   out_1181373723339433063[60] = 0;
   out_1181373723339433063[61] = 0;
   out_1181373723339433063[62] = 0;
   out_1181373723339433063[63] = 0;
   out_1181373723339433063[64] = 0;
   out_1181373723339433063[65] = 0;
   out_1181373723339433063[66] = 0;
   out_1181373723339433063[67] = 0;
   out_1181373723339433063[68] = 0;
   out_1181373723339433063[69] = 0;
   out_1181373723339433063[70] = 0;
   out_1181373723339433063[71] = 0;
   out_1181373723339433063[72] = 1;
   out_1181373723339433063[73] = 0;
   out_1181373723339433063[74] = 0;
   out_1181373723339433063[75] = 0;
   out_1181373723339433063[76] = 0;
   out_1181373723339433063[77] = 0;
   out_1181373723339433063[78] = 0;
   out_1181373723339433063[79] = 0;
   out_1181373723339433063[80] = 0;
   out_1181373723339433063[81] = 0;
   out_1181373723339433063[82] = 0;
   out_1181373723339433063[83] = 0;
   out_1181373723339433063[84] = 0;
   out_1181373723339433063[85] = 0;
   out_1181373723339433063[86] = 0;
   out_1181373723339433063[87] = 0;
}
void h_13(double *state, double *unused, double *out_7746327227580583969) {
   out_7746327227580583969[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7746327227580583969[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7746327227580583969[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8484307507704266798) {
   out_8484307507704266798[0] = 0;
   out_8484307507704266798[1] = 0;
   out_8484307507704266798[2] = 0;
   out_8484307507704266798[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8484307507704266798[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8484307507704266798[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8484307507704266798[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8484307507704266798[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8484307507704266798[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8484307507704266798[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8484307507704266798[10] = 0;
   out_8484307507704266798[11] = 0;
   out_8484307507704266798[12] = 0;
   out_8484307507704266798[13] = 0;
   out_8484307507704266798[14] = 0;
   out_8484307507704266798[15] = 0;
   out_8484307507704266798[16] = 0;
   out_8484307507704266798[17] = 0;
   out_8484307507704266798[18] = 0;
   out_8484307507704266798[19] = 0;
   out_8484307507704266798[20] = 0;
   out_8484307507704266798[21] = 0;
   out_8484307507704266798[22] = 0;
   out_8484307507704266798[23] = 0;
   out_8484307507704266798[24] = 0;
   out_8484307507704266798[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8484307507704266798[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8484307507704266798[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8484307507704266798[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8484307507704266798[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8484307507704266798[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8484307507704266798[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8484307507704266798[32] = 0;
   out_8484307507704266798[33] = 0;
   out_8484307507704266798[34] = 0;
   out_8484307507704266798[35] = 0;
   out_8484307507704266798[36] = 0;
   out_8484307507704266798[37] = 0;
   out_8484307507704266798[38] = 0;
   out_8484307507704266798[39] = 0;
   out_8484307507704266798[40] = 0;
   out_8484307507704266798[41] = 0;
   out_8484307507704266798[42] = 0;
   out_8484307507704266798[43] = 0;
   out_8484307507704266798[44] = 0;
   out_8484307507704266798[45] = 0;
   out_8484307507704266798[46] = 0;
   out_8484307507704266798[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8484307507704266798[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8484307507704266798[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8484307507704266798[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8484307507704266798[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8484307507704266798[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8484307507704266798[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8484307507704266798[54] = 0;
   out_8484307507704266798[55] = 0;
   out_8484307507704266798[56] = 0;
   out_8484307507704266798[57] = 0;
   out_8484307507704266798[58] = 0;
   out_8484307507704266798[59] = 0;
   out_8484307507704266798[60] = 0;
   out_8484307507704266798[61] = 0;
   out_8484307507704266798[62] = 0;
   out_8484307507704266798[63] = 0;
   out_8484307507704266798[64] = 0;
   out_8484307507704266798[65] = 0;
}
void h_14(double *state, double *unused, double *out_5323875262485216062) {
   out_5323875262485216062[0] = state[10];
   out_5323875262485216062[1] = state[11];
   out_5323875262485216062[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8556443663334441091) {
   out_8556443663334441091[0] = 0;
   out_8556443663334441091[1] = 0;
   out_8556443663334441091[2] = 0;
   out_8556443663334441091[3] = 0;
   out_8556443663334441091[4] = 0;
   out_8556443663334441091[5] = 0;
   out_8556443663334441091[6] = 0;
   out_8556443663334441091[7] = 0;
   out_8556443663334441091[8] = 0;
   out_8556443663334441091[9] = 0;
   out_8556443663334441091[10] = 1;
   out_8556443663334441091[11] = 0;
   out_8556443663334441091[12] = 0;
   out_8556443663334441091[13] = 0;
   out_8556443663334441091[14] = 0;
   out_8556443663334441091[15] = 0;
   out_8556443663334441091[16] = 0;
   out_8556443663334441091[17] = 0;
   out_8556443663334441091[18] = 0;
   out_8556443663334441091[19] = 0;
   out_8556443663334441091[20] = 0;
   out_8556443663334441091[21] = 0;
   out_8556443663334441091[22] = 0;
   out_8556443663334441091[23] = 0;
   out_8556443663334441091[24] = 0;
   out_8556443663334441091[25] = 0;
   out_8556443663334441091[26] = 0;
   out_8556443663334441091[27] = 0;
   out_8556443663334441091[28] = 0;
   out_8556443663334441091[29] = 0;
   out_8556443663334441091[30] = 0;
   out_8556443663334441091[31] = 0;
   out_8556443663334441091[32] = 0;
   out_8556443663334441091[33] = 1;
   out_8556443663334441091[34] = 0;
   out_8556443663334441091[35] = 0;
   out_8556443663334441091[36] = 0;
   out_8556443663334441091[37] = 0;
   out_8556443663334441091[38] = 0;
   out_8556443663334441091[39] = 0;
   out_8556443663334441091[40] = 0;
   out_8556443663334441091[41] = 0;
   out_8556443663334441091[42] = 0;
   out_8556443663334441091[43] = 0;
   out_8556443663334441091[44] = 0;
   out_8556443663334441091[45] = 0;
   out_8556443663334441091[46] = 0;
   out_8556443663334441091[47] = 0;
   out_8556443663334441091[48] = 0;
   out_8556443663334441091[49] = 0;
   out_8556443663334441091[50] = 0;
   out_8556443663334441091[51] = 0;
   out_8556443663334441091[52] = 0;
   out_8556443663334441091[53] = 0;
   out_8556443663334441091[54] = 0;
   out_8556443663334441091[55] = 0;
   out_8556443663334441091[56] = 1;
   out_8556443663334441091[57] = 0;
   out_8556443663334441091[58] = 0;
   out_8556443663334441091[59] = 0;
   out_8556443663334441091[60] = 0;
   out_8556443663334441091[61] = 0;
   out_8556443663334441091[62] = 0;
   out_8556443663334441091[63] = 0;
   out_8556443663334441091[64] = 0;
   out_8556443663334441091[65] = 0;
}
void h_33(double *state, double *unused, double *out_5155087305118834571) {
   out_5155087305118834571[0] = state[16];
   out_5155087305118834571[1] = state[17];
   out_5155087305118834571[2] = state[18];
}
void H_33(double *state, double *unused, double *out_784086387991131938) {
   out_784086387991131938[0] = 0;
   out_784086387991131938[1] = 0;
   out_784086387991131938[2] = 0;
   out_784086387991131938[3] = 0;
   out_784086387991131938[4] = 0;
   out_784086387991131938[5] = 0;
   out_784086387991131938[6] = 0;
   out_784086387991131938[7] = 0;
   out_784086387991131938[8] = 0;
   out_784086387991131938[9] = 0;
   out_784086387991131938[10] = 0;
   out_784086387991131938[11] = 0;
   out_784086387991131938[12] = 0;
   out_784086387991131938[13] = 0;
   out_784086387991131938[14] = 0;
   out_784086387991131938[15] = 0;
   out_784086387991131938[16] = 1;
   out_784086387991131938[17] = 0;
   out_784086387991131938[18] = 0;
   out_784086387991131938[19] = 0;
   out_784086387991131938[20] = 0;
   out_784086387991131938[21] = 0;
   out_784086387991131938[22] = 0;
   out_784086387991131938[23] = 0;
   out_784086387991131938[24] = 0;
   out_784086387991131938[25] = 0;
   out_784086387991131938[26] = 0;
   out_784086387991131938[27] = 0;
   out_784086387991131938[28] = 0;
   out_784086387991131938[29] = 0;
   out_784086387991131938[30] = 0;
   out_784086387991131938[31] = 0;
   out_784086387991131938[32] = 0;
   out_784086387991131938[33] = 0;
   out_784086387991131938[34] = 0;
   out_784086387991131938[35] = 0;
   out_784086387991131938[36] = 0;
   out_784086387991131938[37] = 0;
   out_784086387991131938[38] = 0;
   out_784086387991131938[39] = 1;
   out_784086387991131938[40] = 0;
   out_784086387991131938[41] = 0;
   out_784086387991131938[42] = 0;
   out_784086387991131938[43] = 0;
   out_784086387991131938[44] = 0;
   out_784086387991131938[45] = 0;
   out_784086387991131938[46] = 0;
   out_784086387991131938[47] = 0;
   out_784086387991131938[48] = 0;
   out_784086387991131938[49] = 0;
   out_784086387991131938[50] = 0;
   out_784086387991131938[51] = 0;
   out_784086387991131938[52] = 0;
   out_784086387991131938[53] = 0;
   out_784086387991131938[54] = 0;
   out_784086387991131938[55] = 0;
   out_784086387991131938[56] = 0;
   out_784086387991131938[57] = 0;
   out_784086387991131938[58] = 0;
   out_784086387991131938[59] = 0;
   out_784086387991131938[60] = 0;
   out_784086387991131938[61] = 0;
   out_784086387991131938[62] = 1;
   out_784086387991131938[63] = 0;
   out_784086387991131938[64] = 0;
   out_784086387991131938[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6616903330243791477) {
  H(in_vec, out_6616903330243791477);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7776782165476422622) {
  err_fun(nom_x, delta_x, out_7776782165476422622);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1063905258470432307) {
  inv_err_fun(nom_x, true_x, out_1063905258470432307);
}
void live_H_mod_fun(double *state, double *out_1018911972123403788) {
  H_mod_fun(state, out_1018911972123403788);
}
void live_f_fun(double *state, double dt, double *out_946918272088411036) {
  f_fun(state,  dt, out_946918272088411036);
}
void live_F_fun(double *state, double dt, double *out_7622692614917921459) {
  F_fun(state,  dt, out_7622692614917921459);
}
void live_h_4(double *state, double *unused, double *out_4921921813527815973) {
  h_4(state, unused, out_4921921813527815973);
}
void live_H_4(double *state, double *unused, double *out_5733132674020333042) {
  H_4(state, unused, out_5733132674020333042);
}
void live_h_9(double *state, double *unused, double *out_5323875262485216062) {
  h_9(state, unused, out_5323875262485216062);
}
void live_H_9(double *state, double *unused, double *out_8556443663334441091) {
  H_9(state, unused, out_8556443663334441091);
}
void live_h_10(double *state, double *unused, double *out_3114740063238958036) {
  h_10(state, unused, out_3114740063238958036);
}
void live_H_10(double *state, double *unused, double *out_8539081862252184483) {
  H_10(state, unused, out_8539081862252184483);
}
void live_h_12(double *state, double *unused, double *out_6123549659445635911) {
  h_12(state, unused, out_6123549659445635911);
}
void live_H_12(double *state, double *unused, double *out_5112033648972739375) {
  H_12(state, unused, out_5112033648972739375);
}
void live_h_35(double *state, double *unused, double *out_1769556361636079911) {
  h_35(state, unused, out_1769556361636079911);
}
void live_H_35(double *state, double *unused, double *out_2366470616647725666) {
  H_35(state, unused, out_2366470616647725666);
}
void live_h_32(double *state, double *unused, double *out_560078100617833566) {
  h_32(state, unused, out_560078100617833566);
}
void live_H_32(double *state, double *unused, double *out_1181373723339433063) {
  H_32(state, unused, out_1181373723339433063);
}
void live_h_13(double *state, double *unused, double *out_7746327227580583969) {
  h_13(state, unused, out_7746327227580583969);
}
void live_H_13(double *state, double *unused, double *out_8484307507704266798) {
  H_13(state, unused, out_8484307507704266798);
}
void live_h_14(double *state, double *unused, double *out_5323875262485216062) {
  h_14(state, unused, out_5323875262485216062);
}
void live_H_14(double *state, double *unused, double *out_8556443663334441091) {
  H_14(state, unused, out_8556443663334441091);
}
void live_h_33(double *state, double *unused, double *out_5155087305118834571) {
  h_33(state, unused, out_5155087305118834571);
}
void live_H_33(double *state, double *unused, double *out_784086387991131938) {
  H_33(state, unused, out_784086387991131938);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
